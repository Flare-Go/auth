// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"goflare.io/auth"
	"goflare.io/auth/config"
	"goflare.io/auth/handler"
	"goflare.io/auth/middleware"
	"goflare.io/auth/permission"
	"goflare.io/auth/role"
	"goflare.io/auth/server"
	"goflare.io/auth/user"
)

// Injectors from wire.go:

func InitializeAuthService() (*server.Server, error) {
	appConfig := config.ProvideApplicationConfig()
	postgresPool := config.ProvidePostgresConn(appConfig)
	logger := config.NewLogger()
	repository := user.NewRepository(postgresPool, logger)
	service := user.NewService(repository)
	roleRepository := role.NewRepository(postgresPool, logger)
	roleService := role.NewService(roleRepository)
	permissionRepository := permission.NewRepository(postgresPool, logger)
	permissionService := permission.NewService(permissionRepository)
	pasetoSecret := config.ProvidePasetoSecret(appConfig)
	enforcer, err := config.ProvideEnforcer(appConfig)
	if err != nil {
		return nil, err
	}
	authentication := auth.NewAuthentication(service, roleService, permissionService, pasetoSecret, enforcer)
	authenticationMiddleware := middleware.NewAuthenticationMiddleware(authentication)
	userHandler := handler.NewUserHandler(authentication)
	serverServer := server.NewServer(authenticationMiddleware, userHandler, authentication)
	return serverServer, nil
}
